{"pageProps":{"content":{"html":"        <h1>Skip JavaScript Errors</h1>\n\n<p>TestCafe tests fail when a page yields a JavaScript error. If you enable the <code>skipJsErrors</code> option, TestCafe deliberately <strong>ignores</strong> JavaScript errors and lets tests proceed.</p>\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>Errors are signs of malfunction. Do not ignore errors that you can fix. <br>\nIf a page outputs unwarranted error messages, modify your application to prevent this behavior. <br>\nUse the <code>skipJsErrors</code> option to silence errors that you cannot act upon. <br></p>\n</div>\n<h2 id=\"overview__$\"><a class=\"anchor-fix\" href=\"#overview\" id=\"overview\"></a>Overview<a class=\"anchor-hash\" href=\"#overview\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<h3 id=\"methods__$\"><a class=\"anchor-fix\" href=\"#methods\" id=\"methods\"></a>Methods<a class=\"anchor-hash\" href=\"#methods\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li>Use the <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-e-messagevalue-stackvalue2-pageurlvalue3---skip-js-errors-messagevalue-stackvalue2-pageurlvalue3\">CLI flag</a>, the <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#skipjserrors\">configuration file property</a>, or the <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run#skipjserrors\">Test Runner API</a> to ignore JavaScript errors throughout your entire test suite.</li>\n</ul>\n<ul>\n<li>Use the <a class=\"xref\" href=\"/documentation/404025/reference/test-api/fixture/skipjserrors\">fixture.skipJsErrors</a> method to ignore JavaScript errors for specific fixtures. </li>\n</ul>\n<ul>\n<li>Use the <a class=\"xref\" href=\"/documentation/404026/reference/test-api/test/skipjserrors\">test.skipJsErrors</a> method to ignore JavaScript errors in specific tests.</li>\n</ul>\n<ul>\n<li>Use the <a class=\"xref\" href=\"/documentation/404027/reference/test-api/testcontroller/skipjserrors\">t.skipJsErrors</a> action to ignore JavaScript errors at specific points in the test.</li>\n</ul>\n<h3 id=\"options__$\"><a class=\"anchor-fix\" href=\"#options\" id=\"options\"></a>Options<a class=\"anchor-hash\" href=\"#options\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<p>You can skip all JavaScript errors that occur, or only skip errors that meet specific criteria.</p>\n<ul>\n<li><a href=\"#skip-all-errors\">Skip all errors</a></li>\n<li><a href=\"#skip-errors-by-message\">Skip errors by message</a></li>\n<li><a href=\"#skip-errors-by-url\">Skip errors by URL</a></li>\n<li><a href=\"#skip-errors-by-stack\">Skip errors by stack</a></li>\n<li><a href=\"#skip-errors-by-multiple-criteria\">Skip errors by multiple criteria</a></li>\n<li><a href=\"#use-custom-logic-to-skip-errors\">Use custom logic to skip errors</a></li>\n<li><a href=\"#disable-skipjserrors\">Disable skipJsErrors</a></li>\n</ul>\n<h3 id=\"conflict-resolution__$\"><a class=\"anchor-fix\" href=\"#conflict-resolution\" id=\"conflict-resolution\"></a>Conflict resolution<a class=\"anchor-hash\" href=\"#conflict-resolution\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li>The <a class=\"xref\" href=\"/documentation/402639/reference/command-line-interface#-e-messagevalue-stackvalue2-pageurlvalue3---skip-js-errors-messagevalue-stackvalue2-pageurlvalue3\">CLI flag</a> and the <a class=\"xref\" href=\"/documentation/402655/reference/testcafe-api/runner/run#skipjserrors\">Test Runner API option</a> override the <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#skipjserrors\">configuration file property</a>.</li>\n<li>The <a class=\"xref\" href=\"/documentation/404025/reference/test-api/fixture/skipjserrors\">fixture.skipJsErrors</a> method overrides global <code>skipJsErrors</code> settings.</li>\n<li>The <a class=\"xref\" href=\"/documentation/404026/reference/test-api/test/skipjserrors\">test.skipJsErrors</a> method overrides the fixture-wide <code>skipJsErrors</code> setting. </li>\n<li>The <a class=\"xref\" href=\"/documentation/404027/reference/test-api/testcontroller/skipjserrors\">t.skipJsErrors</a> action overrides the test-wide <code>skipJsErrors</code> setting.</li>\n</ul>\n<h2 id=\"skip-all-errors__$\"><a class=\"anchor-fix\" href=\"#skip-all-errors\" id=\"skip-all-errors\"></a>Skip all errors<a class=\"anchor-hash\" href=\"#skip-all-errors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>If you do not specify additional options, TestCafe ignores all JavaScript errors.</p>\n<h3 id=\"examples__$\"><a class=\"anchor-fix\" href=\"#examples\" id=\"examples\"></a>Examples<a class=\"anchor-hash\" href=\"#examples\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><strong>CLI</strong><pre><code class=\"lang-sh\">testcafe ie tests/sample-fixture.js -e\n</code></pre></li>\n<li><strong>Configuration file</strong><pre><code class=\"lang-json\">{\n    &quot;skipJsErrors&quot;: true\n}\n</code></pre></li>\n<li><strong>Test Runner API</strong><pre><code class=\"lang-js\">    const runner = await runner.run({skipJsErrors: true});\n</code></pre></li>\n<li><strong>Fixture method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors();\n</code></pre></li>\n<li><strong>Test method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.click(&#39;#button&#39;);\n}).skipJsErrors();\n</code></pre></li>\n<li><strong>Test action</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t\n        .skipJsErrors() // Ignore all JavaScript errors from this point\n        .click(&#39;#button&#39;)\n        .skipJsErrors(false) // Until this point\n});\n</code></pre></li>\n</ul>\n<p>Specify options to filter errors by string or regular expression. </p>\n<div class=\"WARNING\"><p class=\"alert-title\">Warning</p><p>Enclose regular expressions in forward slashes to avoid strict matches for special characters.</p>\n</div>\n<h2 id=\"skip-errors-by-message__$\"><a class=\"anchor-fix\" href=\"#skip-errors-by-message\" id=\"skip-errors-by-message\"></a>Skip errors by message<a class=\"anchor-hash\" href=\"#skip-errors-by-message\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>If you specify the <code>message</code> option, TestCafe ignores JavaScript errors with specific messages. The <code>message</code> option accepts strings or <strong>regular expressions</strong>.</p>\n<h3 id=\"examples-1__$\"><a class=\"anchor-fix\" href=\"#examples-1\" id=\"examples-1\"></a>Examples<a class=\"anchor-hash\" href=\"#examples-1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><strong>CLI</strong><pre><code class=\"lang-sh\">testcafe chrome test.js -e message=&#39;/.*User ID.*/ig&#39;\n</code></pre></li>\n<li><strong>Configuration file</strong><pre><code class=\"lang-json\">{\n    &quot;skipJsErrors&quot;: {\n        &quot;message&quot;: /.*User ID.*/ig\n    }\n}\n</code></pre></li>\n<li><strong>Test Runner API</strong><pre><code class=\"lang-js\">const runner = await runner.run({\n        skipJsErrors: { message: /.*User ID.*/ }\n});\n</code></pre></li>\n<li><strong>Fixture method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors({\n        message: /.*User.*/ig\n    });\n</code></pre></li>\n<li><strong>Test method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.click(&#39;#button&#39;);\n}).skipJsErrors({\n        message: /.*User.*/ig\n    });\n</code></pre></li>\n<li><strong>Test action</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t\n        .skipJsErrors({message: /.*User.*/ig})\n        .click(&#39;#button&#39;);\n});\n</code></pre></li>\n</ul>\n<h2 id=\"skip-errors-by-url__$\"><a class=\"anchor-fix\" href=\"#skip-errors-by-url\" id=\"skip-errors-by-url\"></a>Skip errors by URL<a class=\"anchor-hash\" href=\"#skip-errors-by-url\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>If you specify the <code>pageUrl</code> option, TestCafe ignores JavaScript errors on specific pages. The <code>pageUrl</code> option accepts strings or <strong>regular expressions</strong>.</p>\n<h3 id=\"examples-2__$\"><a class=\"anchor-fix\" href=\"#examples-2\" id=\"examples-2\"></a>Examples<a class=\"anchor-hash\" href=\"#examples-2\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><strong>CLI</strong><pre><code class=\"lang-sh\">testcafe chrome test.js -e pageUrl=&#39;/.*.*html/&#39;\n</code></pre></li>\n<li><strong>Configuration file</strong><pre><code class=\"lang-json\">{\n    &quot;skipJsErrors&quot;: {\n        &quot;pageUrl&quot;: /.*.*html/\n    }\n}\n</code></pre></li>\n<li><strong>Test Runner API</strong><pre><code class=\"lang-js\">const runner = await runner.run({\n    skipJsErrors: {pageUrl: /.*.*html/}\n});\n</code></pre></li>\n<li><strong>Fixture method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors({\n        pageUrl: /.*.*html/ // Ignores all pages with the html extension\n    });\n</code></pre></li>\n<li><strong>Test method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.click(&#39;#button&#39;);\n}).skipJsErrors({\n        pageUrl: /.*.*html/ // Ignores all pages with the html extension\n    });\n</code></pre></li>\n<li><strong>Test action</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t\n        .skipJsErrors({pageUrl: /.*.html/}) // Only ignore errors that occur on pages with the html extension\n        .click(&#39;#button&#39;);\n});\n</code></pre></li>\n</ul>\n<h2 id=\"skip-errors-by-stack__$\"><a class=\"anchor-fix\" href=\"#skip-errors-by-stack\" id=\"skip-errors-by-stack\"></a>Skip errors by stack<a class=\"anchor-hash\" href=\"#skip-errors-by-stack\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>If you specify the <code>stack</code> option, TestCafe ignores JavaScript errors with specific call stacks. The <code>stack</code> option accepts strings or regular expressions.</p>\n<h3 id=\"examples-3__$\"><a class=\"anchor-fix\" href=\"#examples-3\" id=\"examples-3\"></a>Examples<a class=\"anchor-hash\" href=\"#examples-3\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><strong>CLI</strong><pre><code class=\"lang-sh\">testcafe chrome test.js -e stack=&#39;/.*jquery.*/g&#39;\n</code></pre></li>\n<li><strong>Configuration file</strong><pre><code class=\"lang-json\">{\n    &quot;skipJsErrors&quot;: {\n        &quot;stack&quot;: /.*jquery.*/ig\n    }\n}\n</code></pre></li>\n<li><strong>Test Runner API</strong><pre><code class=\"lang-js\">const runner = await runner.run({\n    skipJsErrors: { stack: /.*jquery.*/ }\n});\n</code></pre></li>\n<li><strong>Fixture method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors({\n        stack: /.*jquery.*/ig\n    });\n</code></pre></li>\n<li><strong>Test method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.click(&#39;#button&#39;);\n}).skipJsErrors({\n        stack: /.*jquery.*/ig;\n    });\n</code></pre></li>\n<li><strong>Test action</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t\n        .skipJsErrors({stack: /.*jquery.*/}) \n        .click(&#39;#button&#39;);\n});\n</code></pre></li>\n</ul>\n<h2 id=\"skip-errors-by-multiple-criteria__$\"><a class=\"anchor-fix\" href=\"#skip-errors-by-multiple-criteria\" id=\"skip-errors-by-multiple-criteria\"></a>Skip errors by multiple criteria<a class=\"anchor-hash\" href=\"#skip-errors-by-multiple-criteria\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Specify several arguments to skip errors that fit <strong>multiple criteria at once</strong> — for example, errors with a specific message <strong>and</strong> a specific call stack. </p>\n<div class=\"NOTE\"><p class=\"alert-title\">Note</p><p>Specify a <a href=\"#use-custom-logic-to-skip-errors\">callback function</a> to set complex rules — for example, to skip errors that match only <em>one</em> criterion of multiple.</p>\n</div>\n<h3 id=\"examples-4__$\"><a class=\"anchor-fix\" href=\"#examples-4\" id=\"examples-4\"></a>Examples<a class=\"anchor-hash\" href=\"#examples-4\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><strong>CLI</strong><pre><code class=\"lang-sh\">testcafe chrome test.js -e stack=&#39;/.*jquery.*/&#39;, message=&#39;/.*User ID.*/ig&#39;\n</code></pre></li>\n<li><strong>Configuration file</strong><pre><code class=\"lang-json\">{\n    &quot;skipJsErrors&quot;: {\n        &quot;stack&quot;: &quot;/.*jquery.*/&quot;,\n        &quot;message&quot;: &quot;/.*User ID.*/ig&quot;\n    }\n}\n</code></pre></li>\n<li><strong>Test Runner API</strong><pre><code class=\"lang-js\">const runner = await runner.run({\n    skipJsErrors: {\n    stack: /.*jquery.*/,\n    message: /.*User ID.*/\n    }\n});\n</code></pre></li>\n<li><strong>Fixture method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors({\n        stack: /.*jquery.*/,\n        message: /.*User ID.*/ig\n    });\n</code></pre></li>\n<li><strong>Test method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.click(&#39;#button&#39;);\n}).skipJsErrors({\n        message: /.*User ID.*/ig,\n        stack: /.*jquery.*/;\n    });\n</code></pre></li>\n<li><strong>Test action</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t\n        .skipJsErrors({pageUrl: &#39;http://example.com&#39;, stack: /.*jquery.*/})\n        .click(&#39;#button&#39;);\n});\n</code></pre></li>\n</ul>\n<h2 id=\"use-custom-logic-to-skip-errors__$\"><a class=\"anchor-fix\" href=\"#use-custom-logic-to-skip-errors\" id=\"use-custom-logic-to-skip-errors\"></a>Use custom logic to skip errors<a class=\"anchor-hash\" href=\"#use-custom-logic-to-skip-errors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Create a <strong>callback function</strong> with custom logic and pass it to the <code>skipJsErrors</code> method.</p>\n<p>The callback function can access the error’s message, call stack, and URL. TestCafe executes the function <strong>client-side</strong>.</p>\n<p>Make sure that the function returns a Boolean value — <strong>true</strong> if you want to skip the error; <strong>false</strong> otherwise.</p>\n<p>The following example skips errors with <strong>either</strong> the specified message <strong>or</strong> the specified stack:</p>\n<h3 id=\"examples-5__$\"><a class=\"anchor-fix\" href=\"#examples-5\" id=\"examples-5\"></a>Examples<a class=\"anchor-hash\" href=\"#examples-5\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><strong>CLI</strong>\n  The command line interface <em>does not support</em> this capability.</li>\n<li><p><strong>Configuration file</strong></p>\n<p>Use a <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file#javascript\">JavaScript configuration file</a> to define a callback function with custom logic:</p>\n<pre><code class=\"lang-js\">const callbackFunction = {\n    fn:           ({ message }) =&gt; message.includes(&#39;User&#39;) || stack.includes(&#39;jquery&#39;);\n};\n\nmodule.exports = {\n    skipJsErrors: callbackFunction,\n};\n</code></pre></li>\n<li><p><strong>Test Runner API</strong></p>\n<pre><code class=\"lang-js\">runner.run({\n\n    skipJsErrors: ({ message, stack, pageUrl }) =&gt; message.includes(&#39;User&#39;) || stack.includes(&#39;jquery&#39;);\n\n});\n</code></pre></li>\n<li><strong>Fixture method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors(\n        ({ message, stack, pageUrl }) =&gt; {\n            return message === &#39;Invalid User ID&#39; || stack.includes(&#39;jquery&#39;)\n        }\n    );\n</code></pre></li>\n<li><strong>Test method</strong><pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.click(&#39;#button&#39;);\n}).skipJsErrors(\n        ({ message, stack, pageUrl }) =&gt; {\n            return message ===&#39;Invalid User ID&#39; || stack.includes(&#39;jquery&#39;)\n        }\n    );\n</code></pre></li>\n<li><strong>Test action</strong><pre><code class=\"lang-js\">t.skipJsErrors(({ message, stack, pageUrl }) =&gt; {\n    return message === &#39;Invalid User ID&#39; || stack.includes(&#39;jquery&#39;)\n})\n</code></pre></li>\n</ul>\n<h3 id=\"pass-additional-data-to-the-callback-function__$\"><a class=\"anchor-fix\" href=\"#pass-additional-data-to-the-callback-function\" id=\"pass-additional-data-to-the-callback-function\"></a>Pass additional data to the callback function<a class=\"anchor-hash\" href=\"#pass-additional-data-to-the-callback-function\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<p>The function accepts three arguments out of the box: <code>message</code>, <code>stack</code>, and <code>pageUrl</code>. To pass additional data to the function, create an object with dependency data. Then, pass an object with both the function and your dependencies to the <code>skipJsErrors</code> method.</p>\n<pre><code class=\"lang-js\">skipJsErrors(\n    {\n        fn: ({ message, stack, pageUrl }) =&gt; {\n        // This code can reference &#39;key1&#39; and &#39;key2&#39;\n        },\n        dependencies: {key1: value, key2: value2}\n    }\n);\n</code></pre><h2 id=\"disable-skipjserrors__$\"><a class=\"anchor-fix\" href=\"#disable-skipjserrors\" id=\"disable-skipjserrors\"></a>Disable skipJsErrors<a class=\"anchor-hash\" href=\"#disable-skipjserrors\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Pass <code>false</code> to the <a class=\"xref\" href=\"/documentation/404025/reference/test-api/fixture/skipjserrors\">fixture.skipJsErrors</a> method, the <a class=\"xref\" href=\"/documentation/404026/reference/test-api/test/skipjserrors\">test.skipJsErrors</a> method, or the <a class=\"xref\" href=\"/documentation/404027/reference/test-api/testcontroller/skipjserrors\">t.skipJsErrors</a> action to disable a <code>skipJsError</code> setting that is greater in scope:</p>\n<h3 id=\"examples-6__$\"><a class=\"anchor-fix\" href=\"#examples-6\" id=\"examples-6\"></a>Examples<a class=\"anchor-hash\" href=\"#examples-6\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h3>\n<ul>\n<li><p>Fixture method</p>\n<pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors(false); // overrides any global setting\n</code></pre></li>\n<li><p>Test method</p>\n<pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n    .skipJsErrors()\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n        await t.click(&#39;#button&#39;);\n    }).skipJsErrors(false); // overrides the fixture-wide setting\n</code></pre></li>\n<li><p>Test action</p>\n<pre><code class=\"lang-js\">fixture `Authentication tests`\n    .page `https://devexpress.github.io/testcafe/`\n\ntest(&#39;Click a button&#39;, async t =&gt; {\n    await t.skipJsErrors(false) // overrides the test-wide setting\n}).skipJsErrors(true); \n</code></pre></li>\n</ul>\n","headers":[{"title":"Overview","tagName":"h2","id":"overview","lvl":2},{"title":"Skip all errors","tagName":"h2","id":"skip-all-errors","lvl":2},{"title":"Skip errors by message","tagName":"h2","id":"skip-errors-by-message","lvl":2},{"title":"Skip errors by URL","tagName":"h2","id":"skip-errors-by-url","lvl":2},{"title":"Skip errors by stack","tagName":"h2","id":"skip-errors-by-stack","lvl":2},{"title":"Skip errors by multiple criteria","tagName":"h2","id":"skip-errors-by-multiple-criteria","lvl":2},{"title":"Use custom logic to skip errors","tagName":"h2","id":"use-custom-logic-to-skip-errors","lvl":2},{"title":"Disable skipJsErrors","tagName":"h2","id":"disable-skipjserrors","lvl":2}],"title":"Skip JavaScript Errors","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"404038","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/resources/release-notes","href":"/resources/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes"},{"name":"Debugging","id":"402633/Debugging"},{"name":"Skip JavaScript Errors","id":"404038","url":"/documentation/404038/recipes/debugging/skip-javascript-errors"}]},"sidebarNav":{"root":{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes"},"items":[{"name":"Basics","id":"402633/Basics","items":[{"name":"Selector Recipes","id":"403654","url":"/documentation/403654/recipes/basics/selector-recipes"},{"name":"Test <select> Elements","id":"402806","url":"/documentation/402806/recipes/basics/test-select-elements"},{"name":"Test Static HTML Pages","id":"402805","url":"/documentation/402805/recipes/basics/test-static-html-pages"},{"name":"Test on Remote Computers and Mobile Devices","id":"402807","url":"/documentation/402807/recipes/basics/test-on-remote-computers-and-mobile-devices"},{"name":"Test File Upload","id":"402808","url":"/documentation/402808/recipes/basics/test-file-upload"}]},{"name":"Best Practices","id":"402633/Best Practices","items":[{"name":"Create Helpers","id":"402803","url":"/documentation/402803/recipes/best-practices/create-helpers"},{"name":"Create Data-Driven Tests","id":"402804","url":"/documentation/402804/recipes/best-practices/create-data-driven-tests"}]},{"name":"Integrations","id":"402633/Integrations","items":[{"name":"Import Third-Party Modules","id":"402795","url":"/documentation/402795/recipes/integrations/import-third-party-modules"},{"name":"Use Testing Library API","id":"402792","url":"/documentation/402792/recipes/integrations/use-testing-library-api"},{"name":"Use the Angular CLI Builder","id":"402793","url":"/documentation/402793/recipes/integrations/use-angular-cli-builder"},{"name":"Use TestCafe with Gulp","id":"402796","url":"/documentation/402796/recipes/integrations/gulp"},{"name":"Use TestCafe with Grunt","id":"402797","url":"/documentation/402797/recipes/integrations/grunt"},{"name":"Test Websites That Use reCAPTCHA","id":"402794","url":"/documentation/402794/recipes/integrations/test-websites-that-use-recaptcha"},{"name":"Find Code Issues with Flow Type Checker","id":"402798","url":"/documentation/402798/recipes/integrations/find-code-issues-with-flow-type-checker"}]},{"name":"Configuration","id":"402633/Configuration","items":[{"name":"Access Environment Variables in Tests","id":"402802","url":"/documentation/402802/recipes/configuration/access-environment-variables-in-tests"},{"name":"Grant or Fix TestCafe Permissions on macOS","id":"404111","url":"/documentation/404111/recipes/debugging/macos-permissions"}]},{"name":"Debugging","id":"402633/Debugging","items":[{"name":"Debug Tests in Chrome Developer Tools","id":"402801","url":"/documentation/402801/recipes/debugging/chrome-dev-tools"},{"name":"Debug Tests in Visual Studio Code","id":"402800","url":"/documentation/402800/recipes/debugging/visual-studio-code"},{"name":"Debug Tests in WebStorm","id":"402799","url":"/documentation/402799/recipes/debugging/webstorm"},{"name":"Skip JavaScript Errors","id":"404038","url":"/documentation/404038/recipes/debugging/skip-javascript-errors"}]},{"name":"Migration","id":"402633/Migration","items":[{"name":"TestCafe 2.0 Migration Guide","id":"404017","url":"/documentation/404017/recipes/migration/testcafe-2-0-migration-guide"},{"name":"Migrate Tests from Protractor to TestCafe","id":"403554","url":"/documentation/403554/recipes/migration/migrate-tests-from-protractor-to-testcafe"}]}],"activeItems":[{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes"},{"name":"Debugging","id":"402633/Debugging"},{"name":"Skip JavaScript Errors","id":"404038","url":"/documentation/404038/recipes/debugging/skip-javascript-errors"}],"showLeafs":false},"breadcrumbsNav":[{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes"},{"name":"Debugging","id":"402633/Debugging"},{"name":"Skip JavaScript Errors","id":"404038","url":"/documentation/404038/recipes/debugging/skip-javascript-errors"}],"publishDates":{"teamBlog":[1667260800000,1661889600000,1657569600000,1637107200000,1633550400000,1632254400000,1626206400000,1612814400000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599076800000,1598385600000,1597953600000,1597780800000,1595966400000,1594670400000,1593460800000,1590350400000,1587326400000],"releaseNotes":[1683748800000,1680724800000,1678132800000,1675022400000,1672272000000,1668038400000,1661889600000,1659902400000,1658088000000,1653523200000,1642464000000,1640131200000,1633118400000,1631044800000,1625688000000,1617739200000,1616356800000,1614729600000,1613332800000,1607990400000,1596672000000,1579204800000,1574294400000,1571184000000,1568232000000,1565121600000,1562270400000,1562011200000,1551297600000,1549483200000,1549483200000,1541534400000,1540425600000,1535932800000,1533168000000,1526342400000,1519862400000,1507593600000,1506628800000,1501617600000,1497297600000,1493150400000,1490644800000,1487188800000,1484769600000,1481140800000,1478548800000,1476662400000]}},"__N_SSG":true}