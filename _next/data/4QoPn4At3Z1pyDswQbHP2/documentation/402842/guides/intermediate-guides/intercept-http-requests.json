{"pageProps":{"content":{"html":"        <h1>Intercept HTTP Requests</h1>\n\n<p>When you <a class=\"xref\" href=\"/documentation/402833/guides/basic-guides/test-actions\">interact</a> with a web page, the page issues HTTP requests. Additionally, you can execute <a class=\"xref\" href=\"/documentation/403971/guides/intermediate-guides/api-testing\">arbitrary HTTP requests</a> with the <code>request</code> method.</p>\n<p>TestCafe allows you <em>intercept</em> these requests with <strong>request hooks</strong>.</p>\n<ul>\n<li><a href=\"#log-http-requests\">Log HTTP Requests</a> to track your application’s network activity.</li>\n<li><a href=\"#mock-http-requests\">Mock HTTP Requests</a> to feed dummy data to your application.</li>\n<li><a href=\"#create-a-custom-request-hook\">Create Custom Request Hooks</a> to perform other actions with HTTP requests, for example, emulate <strong>Kerberos</strong> or <strong>Client Certificate Authentication</strong>.</li>\n</ul>\n<p>You can attach request hooks to <a href=\"#attach-hooks-to-tests-and-fixtures\">specific tests and fixtures</a> or define them <a href=\"#define-global-hooks-in-the-configuration-file\">globally</a>.</p>\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>Request hooks cannot intercept WebSocket requests (ws:// and wss://).</p>\n</div>\n<div class=\"IMPORTANT\"><p class=\"alert-title\">Important</p><p>If an HTTP request causes your test to fail, see the <a class=\"xref\" href=\"/documentation/402835/guides/basic-guides/debug-tests\">Debug Tests</a> guide.</p>\n</div>\n<h2 id=\"log-http-requests__$\"><a class=\"anchor-fix\" href=\"#log-http-requests\" id=\"log-http-requests\"></a>Log HTTP Requests<a class=\"anchor-hash\" href=\"#log-http-requests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Use the <a class=\"xref\" href=\"/documentation/402668/reference/test-api/requestlogger\">request logger</a> to record outgoing HTTP requests and inspect responses to these requests. For instance, you may want to make sure that the data from a remote service is correct.</p>\n<p>Use the <a class=\"xref\" href=\"/documentation/402769/reference/test-api/requestlogger/constructor\">RequestLogger</a> constructor to create a request logger.</p>\n<pre><code class=\"lang-js\">import { RequestLogger } from &#39;testcafe&#39;;\n\nconst simpleLogger = RequestLogger(&#39;http://example.com&#39;);\nconst headerLogger = RequestLogger(/testcafe/, {\n    logRequestHeaders: true,\n    logResponseHeaders: true\n});\n</code></pre><p>Attach the logger to <a href=\"#attach-hooks-to-tests-and-fixtures\">a specific test / fixture</a> or <a href=\"#define-global-hooks-in-the-configuration-file\">enable it globally</a>.</p>\n<p>The <code>RequestLogger</code> logs the following data about outgoing requests:</p>\n<ul>\n<li>The request’s target URL</li>\n<li>The request’s HTTP method</li>\n<li>The status code of the response</li>\n<li>The request sender’s user agent string</li>\n</ul>\n<p>Use the following <code>RequestLogger</code> methods to inspect this data:</p>\n<table>\n<thead>\n<tr>\n<th>Member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"/documentation/402766/reference/test-api/requestlogger/requests\">requests</a></td>\n<td>Returns an array of logged requests</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"/documentation/402768/reference/test-api/requestlogger/contains\">contains</a></td>\n<td>Succeeds if the logger contains a matching request</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"/documentation/402767/reference/test-api/requestlogger/count\">count</a></td>\n<td>Returns the number of matching requests</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"/documentation/402770/reference/test-api/requestlogger/clear\">clear</a></td>\n<td>Clears all logged requests</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<pre><code class=\"lang-js\">import { Selector, RequestLogger } from &#39;testcafe&#39;;\nimport fs from &#39;fs&#39;;\nimport path from &#39;path&#39;;\n\nconst url = &#39;https://demos.devexpress.com/ASPxGridViewDemos/Exporting/Exporting.aspx&#39;;\n\nconst logger = RequestLogger({ url, method: &#39;post&#39; }, {\n    logResponseHeaders: true,\n    logResponseBody:    true\n});\n\nfixture `Export`\n    .page(url)\n    .requestHooks(logger);\n\ntest(&#39;export to csv&#39;, async t =&gt; {\n    const exportToCSVButton = Selector(&#39;span&#39;).withText(&#39;Export to CSV&#39;);\n\n    await t\n        .click(exportToCSVButton)     \n        // When you click &#39;Export&#39;, your browser downloads a compressed CSV file (*.gzip).\n        .expect(logger.contains(r =&gt; r.response.statusCode === 200)).ok();\n\n    const filePath = path.join(__dirname, &#39;exported-grid.zip&#39;);\n    // Locates the file on the disk\n\n    console.log(filePath);\n    console.log(logger.requests[0].response.headers);\n\n    fs.writeFileSync(filePath, logger.requests[0].response.body);\n\n    // Use 3rd party modules to unpack the archive,\n    // parse the CSV and check the data.\n    // Alternatively, verify the file manually.\n});\n</code></pre><h2 id=\"mock-http-requests__$\"><a class=\"anchor-fix\" href=\"#mock-http-requests\" id=\"mock-http-requests\"></a>Mock HTTP Requests<a class=\"anchor-hash\" href=\"#mock-http-requests\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Use the <a class=\"xref\" href=\"/documentation/402667/reference/test-api/requestmock\">request mocker</a> to intercept your application’s HTTP requests and respond to them with dummy data. This is useful when some parts of your website’s infrastructure are difficult to deploy or costly to use.</p>\n<p>Imagine that your application sends data to a third-party traffic analysis service. You do not want your functional tests to impact your website’s analytics. Add a request mocker to intercept requests to that service, and emulate the response as needed.</p>\n<p>Use the <a class=\"xref\" href=\"/documentation/402765/reference/test-api/requestmock/constructor\">RequestMock</a> constructor to create a request mocker.</p>\n<pre><code class=\"lang-js\">var mock = RequestMock();\n</code></pre><p>Append the <a class=\"xref\" href=\"/documentation/402763/reference/test-api/requestmock/onrequestto\">onRequestTo</a> and <a class=\"xref\" href=\"/documentation/402762/reference/test-api/requestmock/respond\">respond</a> methods to the <code>RequestMock</code> constructor:</p>\n<pre><code class=\"lang-js\">var mock = RequestMock()\n    .onRequestTo(request1)\n    .respond(responseMock1)\n</code></pre><p>The <a class=\"xref\" href=\"/documentation/402763/reference/test-api/requestmock/onrequestto\">onRequestTo</a> method specifies which requests to intercept.\nThe <a class=\"xref\" href=\"/documentation/402762/reference/test-api/requestmock/respond\">respond</a> specifies how TestCafe should respond to the intercepted request.</p>\n<p>If you need to mock multiple requests, you can chain these methods repeatedly:</p>\n<pre><code class=\"lang-js\">var mock = RequestMock()\n    .onRequestTo(request1)\n    .respond(responseMock1)\n    .onRequestTo(request2)\n    .respond(responseMock2)\n</code></pre><p>To enable this request hook, <a href=\"#attach-hooks-to-tests-and-fixtures\">attach it to a test/fixture</a> or <a href=\"#define-global-hooks-in-the-configuration-file\">define it globally</a>.</p>\n<p><strong>Example</strong></p>\n<pre><code class=\"lang-js\">import { Selector, RequestMock } from &#39;testcafe&#39;;\n\n// Google Analytics API endpoint\nconst collectDataGoogleAnalyticsRegExp = new RegExp(&#39;https://www.google-analytics.com/collect&#39;);\n\n// Binary image data for the mocked response\nconst mockedResponse = Buffer.from([0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x01, 0x00, 0x01]);\n\nconst mock = RequestMock()\n    .onRequestTo(collectDataGoogleAnalyticsRegExp)\n    // This hook fires when the application sends a request to the Google Analytics API endpoint\n    .respond(mockedResponse, 202, {\n        &#39;content-length&#39;: mockedResponse.length,\n        &#39;content-type&#39;: &#39;image/gif&#39;\n    });\n    // TestCafe intercepts the request and responds with the dummy data above (status code: 202). \n\nfixture `Fixture`\n    .page(&#39;https://devexpress.github.io/testcafe/&#39;)\n    .requestHooks(mock);\n\ntest(&#39;basic&#39;, async t =&gt; {\n    await t\n        .click(&#39;.get-started-button&#39;)\n        .debug();\n        // The debug action pauses the test.\n        // Open your browser&#39;s Developer Tools to inspect the request and the response.\n});\n</code></pre><h2 id=\"create-a-custom-request-hook__$\"><a class=\"anchor-fix\" href=\"#create-a-custom-request-hook\" id=\"create-a-custom-request-hook\"></a>Create a Custom Request Hook<a class=\"anchor-hash\" href=\"#create-a-custom-request-hook\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Create custom request hooks to perform other actions with HTTP requests.</p>\n<ol>\n<li>Create a new class that inherits from the <a class=\"xref\" href=\"/documentation/402669/reference/test-api/requesthook\">RequestHook</a> class.</li>\n<li>Override the <a class=\"xref\" href=\"/documentation/402772/reference/test-api/requesthook/onrequest\">onRequest</a> method to handle the request before it is sent.</li>\n<li>Override the <a class=\"xref\" href=\"/documentation/402771/reference/test-api/requesthook/onresponse\">onResponse</a> method to handle the response after it is received.</li>\n</ol>\n<pre><code class=\"lang-js\">import { RequestHook } from &#39;testcafe&#39;;\n\nexport class MyRequestHook extends RequestHook {\n    constructor (requestFilterRules, responseEventConfigureOpts) {\n        super(requestFilterRules, responseEventConfigureOpts);\n        // ...\n    }\n    async onRequest (event) {\n        // ...\n    }\n    async onResponse (event) {\n        // ...\n    }\n}\n</code></pre><ol start=\"4\">\n<li>Create an instance of your new hook. Attach it to <a href=\"#attach-hooks-to-tests-and-fixtures\">a test/fixture</a> or define it <a href=\"#define-global-hooks-in-the-configuration-file\">globally</a>.</li>\n</ol>\n<pre><code class=\"lang-js\">import { MyRequestHook } from &#39;./my-request-hook&#39;;\n\nconst customHook = new MyRequestHook(/https?:\\/\\/example.com/);\n\nfixture `My fixture`\n    .page(&#39;http://example.com&#39;)\n    .requestHooks(customHook);\n\ntest(&#39;My test&#39;, async t =&gt; {\n        // test actions\n});\n</code></pre><p><strong>Example</strong></p>\n<pre><code class=\"lang-js\">import { Selector, RequestHook } from &#39;testcafe&#39;;\n\nclass JwtBearerAuthorization extends RequestHook {\n    constructor () {\n        // No URL filtering applied to this hook\n        // so it will be used for all requests.\n        super();\n    }\n\n    onRequest (e) {\n        e.requestOptions.headers[&#39;Authorization&#39;] = &#39;generate token here&#39;;\n    }\n\n    onResponse (e) {\n        // This method must also be overridden,\n        // but you can leave it blank.\n    }\n}\n\nconst jwtBearerAuthorization = new JwtBearerAuthorization();\n\nfixture `Fixture`\n    .page(&#39;&lt;website URL&gt;&#39;)\n    .requestHooks(jwtBearerAuthorization);\n\ntest(&#39;basic&#39;, async t =&gt; {\n    /* some actions */\n});\n</code></pre><h2 id=\"attach-hooks-to-tests-and-fixtures__$\"><a class=\"anchor-fix\" href=\"#attach-hooks-to-tests-and-fixtures\" id=\"attach-hooks-to-tests-and-fixtures\"></a>Attach Hooks to Tests and Fixtures<a class=\"anchor-hash\" href=\"#attach-hooks-to-tests-and-fixtures\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>Attach a hook to a test or fixture to handle HTTP requests within these entities.</p>\n<ul>\n<li>Use the <a class=\"xref\" href=\"/documentation/402777/reference/test-api/fixture/requesthooks\">fixture.requestHooks</a> method to attach a hook to a fixture. </li>\n<li>Use the <a class=\"xref\" href=\"/documentation/402731/reference/test-api/test/requesthooks\">test.requestHooks</a> method to attach a hook to a test.</li>\n<li>Use <a class=\"xref\" href=\"/documentation/402713/reference/test-api/testcontroller/addrequesthooks\">t.addRequestHooks</a> and <a class=\"xref\" href=\"/documentation/402692/reference/test-api/testcontroller/removerequesthooks\">t.removeRequestHooks</a> to attach and detach hooks on the fly.</li>\n</ul>\n<pre><code class=\"lang-js\">import { RequestLogger, RequestMock } from &#39;testcafe&#39;;\n\nconst logger = RequestLogger(&#39;http://example.com&#39;);\nconst mock   = RequestMock()\n    .onRequestTo(&#39;http://external-service.com/api/&#39;)\n    .respond({ data: &#39;value&#39; });\n\nfixture `My fixture`\n    .page(&#39;http://example.com&#39;)\n    .requestHooks(logger);\n\ntest\n    .requestHooks(mock)\n    (&#39;My test&#39;, async t =&gt; {\n    await t\n         .click(&#39;#send-logged-request&#39;)\n         .expect(logger.count(() =&gt; true)).eql(1)\n         .removeRequestHooks(logger)\n         .click(&#39;#send-unlogged-request&#39;)\n         .expect(logger.count(() =&gt; true)).eql(1)\n         .addRequestHooks(logger)\n         .click(&#39;#send-logged-request&#39;)\n         .expect(logger.count(() =&gt; true)).eql(2);\n});\n</code></pre><h2 id=\"define-global-hooks-in-the-configuration-file__$\"><a class=\"anchor-fix\" href=\"#define-global-hooks-in-the-configuration-file\" id=\"define-global-hooks-in-the-configuration-file\"></a>Define Global Hooks in the Configuration File<a class=\"anchor-hash\" href=\"#define-global-hooks-in-the-configuration-file\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>You may need to attach the same hook to multiple tests or fixtures. To avoid code duplication, you can define a global hook in the <a class=\"xref\" href=\"/documentation/402638/reference/configuration-file\">JavaScript configuration file</a>. </p>\n<p>The following code shows an example that defines a global <code>RequestMock</code>. Note that test code doesn’t require an explicit hook declaration. The configuration file attaches the hook to the test. </p>\n<pre><code class=\"lang-js\">//.testcaferc.js or .testcaferc.cjs\nconst { RequestMock } = require(&#39;testcafe&#39;);\nconst mock = RequestMock()\n    .onRequestTo(&#39;https://api.mycorp.com/users/id/135865&#39;)\n    .respond({\n        name:     &#39;John Hearts&#39;,\n        position: &#39;CTO&#39;,\n    }, 200, { &#39;access-control-allow-origin&#39;: &#39;*&#39; })\n    .onRequestTo(/internal.mycorp.com/)\n    .respond(null, 404);\n\nmodule.exports = {\n    hooks: {\n        request: mock,\n    },\n};\n</code></pre><pre><code class=\"lang-js\">//test.js\nfixture `RequestMock`\n    .page`https://mycorp.com`;\n\ntest(&#39;Should mock requests&#39;, async t =&gt; {\n    const user = await t\n    .eval(() =&gt; fetch(&#39;https://api.mycorp.com/users/id/135865&#39;)\n    .then(res =&gt; res.json()));\n\n    await t\n        .expect(user).eql({ name: &#39;John Hearts&#39;, position: &#39;CTO&#39; })\n        .navigateTo(&#39;https://internal.mycorp.com&#39;);\n});\n</code></pre><p>The hook declaration may require an extra step. In the example above, the test does not need to read any data from the <code>RequestMock</code> object. The situation changes if the hook is a <code>RequestLogger</code> or a custom <code>RequestMock</code>. Tests may need to obtain the hook object’s data in such cases.</p>\n<p>The following example demonstrates how you can declare a global <code>RequestLogger</code>. The test needs to access the logger object in order to read and validate its data. To enable such access, define an extra file: “logger.js”. This file defines the hook object and supplies it to both the test and the configuration file.</p>\n<pre><code class=\"lang-js\">//logger.js\nconst { RequestLogger } = require(&#39;testcafe&#39;);\nmodule.exports = new RequestLogger();\n</code></pre><pre><code class=\"lang-js\">//.testcaferc.js or .testcaferc.cjs\nconst logger = require(&#39;./logger&#39;);\n\nmodule.exports = {\n    hooks: {\n        request: logger,\n    },\n};\n</code></pre><pre><code class=\"lang-js\">//test.js\nconst { logger } = &#39;./logger&#39;;\n\nfixture`RequestLogger`\n    .page(&#39;https://devexpress.github.io/testcafe/example/&#39;);\n\ntest(&#39;Check request&#39;, async t =&gt; {\n    await t\n    .expect(logger.contains(record =&gt; record.response.statusCode === 200)).ok()\n    .expect(logger.requests[0].request.method).eql(&#39;get&#39;);\n});\n</code></pre><h2 id=\"request-hook-conflicts__$\"><a class=\"anchor-fix\" href=\"#request-hook-conflicts\" id=\"request-hook-conflicts\"></a>Request Hook Conflicts<a class=\"anchor-hash\" href=\"#request-hook-conflicts\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\"><path d=\"M12.586 2.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2.002 2.002 0 01-3.438-1.407 2 2 0 01.61-1.42l3-3z\" clip-rule=\"evenodd\"></path></svg></a></h2>\n<p>If a single request is subject to multiple request hooks, TestCafe executes the hooks in the following order:</p>\n<ul>\n<li>Global hook</li>\n<li>Fixture hook</li>\n<li>Test hook</li>\n</ul>\n","headers":[{"title":"Log HTTP Requests","tagName":"h2","id":"log-http-requests","lvl":2},{"title":"Mock HTTP Requests","tagName":"h2","id":"mock-http-requests","lvl":2},{"title":"Create a Custom Request Hook","tagName":"h2","id":"create-a-custom-request-hook","lvl":2},{"title":"Attach Hooks to Tests and Fixtures","tagName":"h2","id":"attach-hooks-to-tests-and-fixtures","lvl":2},{"title":"Define Global Hooks in the Configuration File","tagName":"h2","id":"define-global-hooks-in-the-configuration-file","lvl":2},{"title":"Request Hook Conflicts","tagName":"h2","id":"request-hook-conflicts","lvl":2}],"title":"Intercept HTTP Requests","schema":null,"author":null,"preview":null,"description":null,"published":null},"topicUid":"402842","headerNav":{"items":[{"name":"TestCafe Studio","id":"TestCafe Studio"},{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started","items":[]},{"name":"API","id":"402632","url":"/documentation/402632/api","items":[]},{"name":"Recipes","id":"402633","url":"/documentation/402633/recipes","items":[]},{"name":"Examples","id":"402637","url":"/documentation/402637/examples"},{"name":"FAQ","id":"403936","url":"/documentation/403936/faq","headerUrl":"/documentation/402636/faq/general-info","items":[]},{"name":"What's New","id":"What's New","url":"/release-notes","href":"/release-notes","items":[]},{"name":"Dashboard Alpha","id":"Dashboard Alpha","items":[]},{"name":"Support","id":"Support","url":"/support","href":"/support"}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"}]},"sidebarNav":{"root":{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},"items":[{"name":"Overview","id":"402634/Overview","items":[{"name":"Getting Started","id":"402635","url":"/documentation/402635/guides/overview/getting-started"},{"name":"Why TestCafe?","id":"402631","url":"/documentation/402631/guides/overview/why-testcafe"}]},{"name":"Basic Guides","id":"402634/Basic Guides","items":[{"name":"Install TestCafe","id":"402834","url":"/documentation/402834/guides/basic-guides/install-testcafe"},{"name":"Test Structure","id":"402831","url":"/documentation/402831/guides/basic-guides/test-structure"},{"name":"Element Selectors","id":"402829","url":"/documentation/402829/guides/basic-guides/element-selectors"},{"name":"Test Actions","id":"402833","url":"/documentation/402833/guides/basic-guides/test-actions"},{"name":"Assertions","id":"402837","url":"/documentation/402837/guides/basic-guides/assertions"},{"name":"Client Functions","id":"402832","url":"/documentation/402832/guides/basic-guides/client-functions"},{"name":"Run Tests","id":"402830","url":"/documentation/402830/guides/basic-guides/run-tests"},{"name":"Debug Tests","id":"402835","url":"/documentation/402835/guides/basic-guides/debug-tests"}]},{"name":"Best Practices","id":"402634/Best Practices","items":[{"name":"Best Practices","id":"402836","url":"/documentation/402836/guides/best-practices/best-practices"},{"name":"Speed Up Test Execution","id":"402963","url":"/documentation/402963/guides/best-practices/speed-up-test-execution"},{"name":"Page Model","id":"402826","url":"/documentation/402826/guides/best-practices/page-model"},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Best Practices/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}]},{"name":"Intermediate Guides","id":"402634/Intermediate Guides","items":[{"name":"Browsers","id":"402828","url":"/documentation/402828/guides/intermediate-guides/browsers"},{"name":"Mobile Devices, Cloud Browsers and Emulation","id":"403584","url":"/documentation/403584/guides/intermediate-guides/mobile-devices-cloud-browsers-and-emulation"},{"name":"Native Automation Mode","id":"404237","url":"/documentation/404237/guides/intermediate-guides/native-automation-mode"},{"name":"Visual Selector Debugger","id":"404288","url":"/documentation/404288/guides/intermediate-guides/visual-selector-debugger"},{"name":"Run Tests Concurrently","id":"403626","url":"/documentation/403626/guides/intermediate-guides/run-tests-concurrently"},{"name":"Reporters","id":"402825","url":"/documentation/402825/guides/intermediate-guides/reporters"},{"name":"TypeScript and CoffeeScript","id":"402824","url":"/documentation/402824/guides/intermediate-guides/typescript-and-coffeescript"},{"name":"Authentication and Roles","id":"402845","url":"/documentation/402845/guides/intermediate-guides/authentication"},{"name":"Screenshots and Videos","id":"402840","url":"/documentation/402840/guides/intermediate-guides/screenshots-and-videos"},{"name":"API Testing","id":"403971","url":"/documentation/403971/guides/intermediate-guides/api-testing"},{"name":"Hooks","id":"403435","url":"/documentation/403435/guides/intermediate-guides/hooks"},{"name":"Quarantine Mode","id":"403841","url":"/documentation/403841/guides/intermediate-guides/quarantine-mode"},{"name":"Live Mode","id":"403842","url":"/documentation/403842/guides/intermediate-guides/live-mode"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"},{"name":"Metadata and Filtering","id":"403436","url":"/documentation/403436/guides/intermediate-guides/metadata-and-filtering"},{"name":"Multiple Browser Windows","id":"402841","url":"/documentation/402841/guides/intermediate-guides/multiple-browser-windows"}]},{"name":"Advanced Guides","id":"402634/Advanced Guides","items":[{"name":"Advanced Selector Techniques","id":"403655","url":"/documentation/403655/guides/advanced-guides/advanced-selector-techniques"},{"name":"Inject Client Scripts","id":"402843","url":"/documentation/402843/guides/advanced-guides/inject-client-scripts"},{"name":"ESM Module Support","id":"404258","url":"/documentation/404258/guides/advanced-guides/esm-module-support"},{"name":"Create Custom Test Actions","id":"404150","url":"/documentation/404150/guides/advanced-guides/custom-test-actions"},{"name":"Fire DOM Events","id":"403219","url":"/documentation/403219/guides/advanced-guides/fire-dom-events"},{"name":"Execute Shell Commands on Startup","id":"403849","url":"/documentation/403849/guides/advanced-guides/execute-shell-commands-on-startup"},{"name":"Test HTTPS Features and HTTP/2 Websites","id":"402839","url":"/documentation/402839/guides/advanced-guides/test-https-features-and-http2-websites"},{"name":"Modify Reporter Output","id":"404388","url":"/documentation/404388/guides/advanced-guides/modify-reporter-output"},{"name":"Detect the Client Browser and Platform","id":"402844","url":"/documentation/402844/guides/advanced-guides/detect-the-client-browser-and-platform"},{"name":"Use the TestCafe Docker Image","id":"402838","url":"/documentation/402838/guides/advanced-guides/use-testcafe-docker-image"},{"name":"Built-In Wait Mechanisms","id":"402827","url":"/documentation/402827/guides/advanced-guides/built-in-wait-mechanisms"},{"name":"Replay Chrome User Flow Recordings","id":"403998","url":"/documentation/403998/guides/advanced-guides/chrome-replay-support"}]},{"name":"Continuous Integration","id":"402809","url":"/documentation/402809/guides/continuous-integration","items":[{"name":"Integrate TestCafe with AppVeyor","id":"402823","url":"/documentation/402823/guides/continuous-integration/appveyor"},{"name":"Integrate TestCafe with Azure DevOps","id":"402822","url":"/documentation/402822/guides/continuous-integration/azure-devops"},{"name":"Run Tests in Bitbucket Pipelines","id":"402821","url":"/documentation/402821/guides/continuous-integration/bitbucket-pipelines"},{"name":"Integrate TestCafe With CircleCI","id":"402819","url":"/documentation/402819/guides/continuous-integration/circleci"},{"name":"Run Tests on LambdaTest with CircleCI","id":"402820","url":"/documentation/402820/guides/continuous-integration/circleci-and-lambdatest"},{"name":"Integrate TestCafe with GitHub Actions","id":"402817","url":"/documentation/402817/guides/continuous-integration/github-actions"},{"name":"Run Tests on BrowserStack with GitHub Actions","id":"402818","url":"/documentation/402818/guides/continuous-integration/github-actions-and-browserstack"},{"name":"Integrate TestCafe with GitLab","id":"402816","url":"/documentation/402816/guides/continuous-integration/gitlab"},{"name":"Integrate TestCafe with Jenkins","id":"402815","url":"/documentation/402815/guides/continuous-integration/jenkins"},{"name":"Integrate TestCafe with TeamCity","id":"402847","url":"/documentation/402847/guides/continuous-integration/teamcity"},{"name":"Run Tests in Travis CI","id":"402813","url":"/documentation/402813/guides/continuous-integration/travis"},{"name":"Run Tests on Sauce Labs with Travis CI","id":"402814","url":"/documentation/402814/guides/continuous-integration/travis-and-sauce-labs"}]},{"name":"Extend TestCafe","id":"402634/Extend TestCafe","items":[{"name":"Install Plugins","id":"402811","url":"/documentation/402811/guides/extend-testcafe/install-plugins"},{"name":"Reporter Plugin","id":"402810","url":"/documentation/402810/guides/extend-testcafe/reporter-plugin"},{"name":"Browser Provider Plugin","id":"402812","url":"/documentation/402812/guides/extend-testcafe/browser-provider-plugin"}]}],"activeItems":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"}],"showLeafs":true},"breadcrumbsNav":[{"name":"Guides","id":"402634","url":"/documentation/402634/guides","headerUrl":"/documentation/402635/guides/overview/getting-started"},{"name":"Intermediate Guides","id":"402634/Intermediate Guides"},{"name":"Intercept HTTP Requests","id":"402842","url":"/documentation/402842/guides/intermediate-guides/intercept-http-requests"}],"publishDates":{"teamBlog":[1667260800000,1661889600000,1657569600000,1637107200000,1633550400000,1632254400000,1626206400000,1612814400000,1609113600000,1607644800000,1605657600000,1605571200000,1600905600000,1599076800000,1598385600000,1597953600000,1597780800000,1595966400000,1594670400000,1593460800000,1590350400000,1587326400000],"releaseNotes}},"__N_SSG":true}